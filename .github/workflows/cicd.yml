name: CICD
on: [push]

env:
  DB_URL: postgresql://user:pass@127.0.0.1:5432/db

jobs:
  test:
    runs-on: ubuntu-20.04

    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_DB: db
    #       POSTGRES_USER: user
    #       POSTGRES_PASSWORD: pass
    #     ports:
    #       - 5432:5432
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 2s
    #       --health-timeout 1s
    #       --health-retries 10

    steps:
      - uses: actions/checkout@v2
      - name: "Setup python"
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      # - run: pip install poetry
      # - run: make install
      # - run: make lint
      # - run: make test
      # - run: make cov
      # - name: "Upload coverage to Codecov"
      #   uses: codecov/codecov-action@v1
      #   with:
      #     fail_ci_if_error: true
      #     token: ${{ secrets.CODECOV_TOKEN }}
      - run: echo Hello

  deploy_test:
    needs: test
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/develop'

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_AUTH_KEY }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            cr.yandex/${{ secrets.YC_TEST_CR_ID }}/auth_service:${{ github.sha }}
            cr.yandex/${{ secrets.YC_TEST_CR_ID }}/auth_service:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


